# To install and update paperless with this file, do the following:
#
# - Copy this file as 'docker-compose.yml' and the files 'docker-compose.env'
#   and '.env' into a folder.
# - Run 'docker compose pull'.
# - Run 'docker compose run --rm webserver createsuperuser' to create a user.
# - Run 'docker compose up -d'.
#
# For more extensive installation and update instructions, refer to the
# documentation.

# https://nerdyarticles.com/a-clutter-free-life-with-paperless-ngx/#effortless-editing-perfecting-your-documents

version: "3.5"
services:
  broker:
    image: docker.io/library/redis:7
    container_name: paperless_redis
    restart: unless-stopped
    expose:
      - 6379
    volumes:
      - /data/paperless/redisdata:/data
    networks:
      - paperless

  db:
    image: docker.io/library/postgres:15
    container_name: paperless_postgres
    restart: unless-stopped
    expose:
      - 5432
    volumes:
      - /data/paperless/pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: paperless
      POSTGRES_USER: paperless
      POSTGRES_PASSWORD: paperless
    networks:
      - paperless

  webserver:
    image: ghcr.io/paperless-ngx/paperless-ngx:latest
    container_name: paperless
    restart: unless-stopped
    stop_grace_period: 60s
    depends_on:
      - db
      - broker
    expose:
      - 8000
    healthcheck:
      test: ["CMD", "curl", "-fs", "-S", "--max-time", "2", "http://localhost:8000"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - /data/paperless/data:/usr/src/paperless/data
      - /data/paperless/media:/usr/src/paperless/media
      - /data/paperless/export:/usr/src/paperless/export
      - /data/paperless/consume:/usr/src/paperless/consume
    env_file: 
      - ".env"  # PAPERLESS_URL, PAPERLESS_ALLOWED_HOSTS, PAPERLESS_SECRET_KEY
    environment:
      PAPERLESS_REDIS: redis://broker:6379
      PAPERLESS_DBHOST: db
      USERMAP_UID: 1000
      USERMAP_GID: 1000
      PAPERLESS_OCR_LANGUAGE: deu
      PAPERLESS_OCR_LANGUAGES: eng deu
      # The following flag (PAPERLESS_OCR_SKIP_ARCHIVE_FILE) ensures that pdfs with embedded text do not 
      # run through the OCR part again. This is necessary, because signed documents crash the ingest process 
      # if they are sent to OCR. 
      # set this when uploading signed documents, then dc up -d --build (https://github.com/paperless-ngx/paperless-ngx/discussions/5657#discussioncomment-8368802)
      PAPERLESS_OCR_SKIP_ARCHIVE_FILE: with_text
      PAPERLESS_TIME_ZONE: Europe/Berlin
      PAPERLESS_FILENAME_FORMAT: "{{created}} - {{correspondent}} - {{title}}"
      PAPERLESS_TASK_WORKERS: 1
      PAPERLESS_THREADS_PER_WORKER: 1
      PAPERLESS_WEBSERVER_WORKERS: 1
      PAPERLESS_NUMBER_OF_SUGGESTED_DATES: 7
    networks:
      - internet
      - paperless

networks:
  internet:
    name: "internet"
  paperless:
    name: "paperless"
    internal: true
    attachable: true
